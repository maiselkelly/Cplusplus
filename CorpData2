/*Corporate Sales Data
Write a program that uses a structure named CorpData to store the following
information on a company division:
	Division name (such as East, West, North, or South)
	First quarter sales
	Second quarter sales
	Third quarter sales
	Fourth quarter sales
	Total annual sales
	Average quarterly sales
With user input */


#include <iostream>
#include <iomanip>
#include<string>
using namespace std;

//Structure for each quarter + total sales + average
struct CorpData
{
    string DivisionName;
    double firstQuar;
    double secondQuar;
    double thirdQuar;
    double fourthQuar;
    double totalSales;
    double averageQuarSales;
    CorpData(){ // Default constructor
};
    
    //Constructor with parameters set
   CorpData(string D, double f, double s, double t, double fo)
    {
    DivisionName = D;
    firstQuar = f;
    secondQuar = s;
    thirdQuar = t;
    fourthQuar = fo;
    }
};

//Prototype
void getData(CorpData &);
void calcSales(CorpData &);
void displaySales(CorpData &);



//Get Data for Each Quarter
void getData(CorpData &D)
{
cout << "Enter the first quarter sale of " << D.DivisionName;
    cin >> D.firstQuar;
cout << "Enter the second quarter sale of " <<D.DivisionName;
    cin >> D.secondQuar;
cout << "Enter the third quarter sale of " << D.DivisionName;
    cin >> D.thirdQuar;
cout << "Enter the fourth quarter sale of " <<D.DivisionName;
    cin >> D.fourthQuar;
}



//Function for Sales
void calcSales(CorpData &D)
{
    D.totalSales = D.firstQuar + D.secondQuar + D.thirdQuar + D.fourthQuar;
    D.averageQuarSales = D.totalSales / 4.0;
}


//Function for Showing Sales
void displaySales(CorpData &D)
{
    cout<<"Division: " << D.DivisionName << endl;
    cout <<"Total Sales: $" << D.totalSales << endl;
    cout << "Quarter Average: $" << D.averageQuarSales << endl;
}


//Main for four different corporate divisions
int main()
{
    CorpData north;   //North object
    CorpData south;   //South object
    CorpData west;    //West object
    CorpData east;    //East object
    
//North
north.DivisionName = "North";
getData(north);
calcSales(north);
displaySales(north);
cout << endl;

//South
south.DivisionName = "South";
getData(south);
calcSales(south);
displaySales(south);
cout << endl;

//East
east.DivisionName = "East";
getData(east);
calcSales(east);
displaySales(east);
cout << endl;

//West
west.DivisionName = "West";
getData(west);
calcSales(west);
displaySales(west);
cout << endl;
}
